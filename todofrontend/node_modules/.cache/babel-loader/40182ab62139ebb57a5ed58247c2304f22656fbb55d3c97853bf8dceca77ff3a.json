{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Omkar Patil\\\\Desktop\\\\Internship Task2\\\\todofrontend\\\\src\\\\Components\\\\todolist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TODOITEM from './todoitem';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/tasks';\nfunction TOLIST() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodoText, setNewTodoText] = useState('');\n  const [editMode, setEditMode] = useState(null); // Track which todo is in edit mode\n  const [editText, setEditText] = useState(''); // Store the text being edited\n\n  // Fetch todos from API on mount\n  useEffect(() => {\n    axios.get(API_URL).then(response => setTodos(response.data)).catch(error => console.error('Error fetching todos:', error));\n  }, []);\n  const toggleComplete = id => {\n    const todo = todos.find(todo => todo.id === id);\n    axios.put(`${API_URL}/${id}`, {\n      completed: !todo.completed\n    }).then(() => {\n      setTodos(todos.map(todo => todo.id === id ? {\n        ...todo,\n        completed: !todo.completed\n      } : todo));\n    }).catch(error => console.error('Error updating todo:', error));\n  };\n  const editTodo = (id, text) => {\n    setEditMode(id);\n    setEditText(text);\n  };\n  const handleEditChange = e => {\n    setEditText(e.target.value);\n  };\n  const handleEditSubmit = id => {\n    axios.put(`${API_URL}/${id}`, {\n      text: editText\n    }).then(() => {\n      setTodos(todos.map(todo => todo.id === id ? {\n        ...todo,\n        text: editText\n      } : todo));\n      setEditMode(null);\n      setEditText('');\n    }).catch(error => console.error('Error updating todo:', error));\n  };\n  const deleteTodo = id => {\n    axios.delete(`${API_URL}/${id}`).then(() => {\n      setTodos(todos.filter(todo => todo.id !== id));\n    }).catch(error => console.error('Error deleting todo:', error));\n  };\n  const handleChange = e => {\n    setNewTodoText(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (newTodoText.trim() === '') return;\n    axios.post(API_URL, {\n      text: newTodoText\n    }).then(response => {\n      setTodos([...todos, response.data]);\n      setNewTodoText('');\n    }).catch(error => console.error('Error adding todo:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodoText,\n        onChange: handleChange,\n        placeholder: \"Add a new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(TODOITEM, {\n        todo: todo,\n        toggleComplete: toggleComplete,\n        editTodo: editTodo // Pass the function directly\n        ,\n        deleteTodo: deleteTodo,\n        isEditing: editMode === todo.id,\n        editText: editText,\n        handleEditChange: handleEditChange,\n        handleEditSubmit: handleEditSubmit\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(TOLIST, \"FifXzc1kmsiJ5/CKV64eR6eMLkQ=\");\n_c = TOLIST;\nexport default TOLIST;\nvar _c;\n$RefreshReg$(_c, \"TOLIST\");","map":{"version":3,"names":["React","useState","useEffect","TODOITEM","axios","jsxDEV","_jsxDEV","API_URL","TOLIST","_s","todos","setTodos","newTodoText","setNewTodoText","editMode","setEditMode","editText","setEditText","get","then","response","data","catch","error","console","toggleComplete","id","todo","find","put","completed","map","editTodo","text","handleEditChange","e","target","value","handleEditSubmit","deleteTodo","delete","filter","handleChange","handleSubmit","preventDefault","trim","post","className","children","onSubmit","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","isEditing","_c","$RefreshReg$"],"sources":["C:/Users/Omkar Patil/Desktop/Internship Task2/todofrontend/src/Components/todolist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TODOITEM from './todoitem';\r\nimport axios from 'axios'; \r\n\r\nconst API_URL = 'http://localhost:5000/tasks'; \r\n\r\nfunction TOLIST() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodoText, setNewTodoText] = useState('');\r\n  const [editMode, setEditMode] = useState(null); // Track which todo is in edit mode\r\n  const [editText, setEditText] = useState('');   // Store the text being edited\r\n\r\n  // Fetch todos from API on mount\r\n  useEffect(() => {\r\n    axios.get(API_URL)\r\n      .then(response => setTodos(response.data))\r\n      .catch(error => console.error('Error fetching todos:', error));\r\n  }, []);\r\n\r\n  const toggleComplete = (id) => {\r\n    const todo = todos.find(todo => todo.id === id);\r\n    axios.put(`${API_URL}/${id}`, { completed: !todo.completed })\r\n      .then(() => {\r\n        setTodos(todos.map(todo => \r\n          todo.id === id ? { ...todo, completed: !todo.completed } : todo\r\n        ));\r\n      })\r\n      .catch(error => console.error('Error updating todo:', error));\r\n  };\r\n\r\n  const editTodo = (id, text) => {\r\n    setEditMode(id);\r\n    setEditText(text);\r\n  };\r\n\r\n  const handleEditChange = (e) => {\r\n    setEditText(e.target.value);\r\n  };\r\n\r\n  const handleEditSubmit = (id) => {\r\n    axios.put(`${API_URL}/${id}`, { text: editText })\r\n      .then(() => {\r\n        setTodos(todos.map(todo => \r\n          todo.id === id ? { ...todo, text: editText } : todo\r\n        ));\r\n        setEditMode(null);\r\n        setEditText('');\r\n      })\r\n      .catch(error => console.error('Error updating todo:', error));\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    axios.delete(`${API_URL}/${id}`)\r\n      .then(() => {\r\n        setTodos(todos.filter(todo => todo.id !== id));\r\n      })\r\n      .catch(error => console.error('Error deleting todo:', error));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setNewTodoText(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (newTodoText.trim() === '') return;\r\n\r\n    axios.post(API_URL, { text: newTodoText })\r\n      .then(response => {\r\n        setTodos([...todos, response.data]);\r\n        setNewTodoText('');\r\n      })\r\n      .catch(error => console.error('Error adding todo:', error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={newTodoText}\r\n          onChange={handleChange}\r\n          placeholder=\"Add a new task\"\r\n        />\r\n        <button type=\"submit\">Add Todo</button>\r\n      </form>\r\n      <div className=\"todo-list\">\r\n        {todos.map(todo => (\r\n          <TODOITEM\r\n            key={todo.id}\r\n            todo={todo}\r\n            toggleComplete={toggleComplete}\r\n            editTodo={editTodo} // Pass the function directly\r\n            deleteTodo={deleteTodo}\r\n            isEditing={editMode === todo.id}\r\n            editText={editText}\r\n            handleEditChange={handleEditChange}\r\n            handleEditSubmit={handleEditSubmit}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TOLIST;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}