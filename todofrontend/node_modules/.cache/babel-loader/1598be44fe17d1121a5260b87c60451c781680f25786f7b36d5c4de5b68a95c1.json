{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Omkar Patil\\\\Desktop\\\\Internship Task2\\\\todofrontend\\\\src\\\\Components\\\\todolist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TODOITEM from './todoitem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TOLIST() {\n  _s();\n  const getTodosFromLocalStorage = () => {\n    const savedTodos = localStorage.getItem('todos');\n    return savedTodos ? JSON.parse(savedTodos) : [];\n  };\n  const saveTodosToLocalStorage = todos => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  };\n  const [todos, setTodos] = useState(getTodosFromLocalStorage());\n  const [newTodoText, setNewTodoText] = useState('');\n  const [editMode, setEditMode] = useState(false); // Track which todo is in edit mode\n  const [editText, setEditText] = useState(''); // Store the text being edited\n\n  useEffect(() => {\n    saveTodosToLocalStorage(todos);\n  }, [todos]);\n  const toggleComplete = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n  const editTodo = (id, text) => {\n    setEditMode(id); // Set the id of the todo being edited\n    setEditText(text); // Initialize with the current text of the todo\n  };\n  const handleEditChange = e => {\n    setEditText(e.target.value);\n  };\n  const handleEditSubmit = id => {\n    setTodos(todos.map(todo => todo.id === id ? {\n      ...todo,\n      text: editText\n    } : todo));\n    setEditMode(null);\n    setEditText('');\n  };\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const handleChange = e => {\n    setNewTodoText(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (newTodoText.trim() === '') return;\n    const newTodo = {\n      id: todos.length ? todos[todos.length - 1].id + 1 : 1,\n      text: newTodoText,\n      time: new Date().toLocaleString(),\n      completed: false\n    };\n    setTodos([...todos, newTodo]);\n    setNewTodoText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodoText,\n        onChange: handleChange,\n        placeholder: \"Add a new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(TODOITEM, {\n        todo: todo,\n        toggleComplete: toggleComplete,\n        editTodo: editTodo // Pass the function directly\n        ,\n        deleteTodo: deleteTodo,\n        isEditing: editMode === todo.id,\n        editText: editText,\n        handleEditChange: handleEditChange,\n        handleEditSubmit: handleEditSubmit\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(TOLIST, \"Cn24xeKlzMn/Ea8L7uHs4ofZI5s=\");\n_c = TOLIST;\nexport default TOLIST;\nvar _c;\n$RefreshReg$(_c, \"TOLIST\");","map":{"version":3,"names":["React","useState","useEffect","TODOITEM","jsxDEV","_jsxDEV","TOLIST","_s","getTodosFromLocalStorage","savedTodos","localStorage","getItem","JSON","parse","saveTodosToLocalStorage","todos","setItem","stringify","setTodos","newTodoText","setNewTodoText","editMode","setEditMode","editText","setEditText","toggleComplete","id","map","todo","completed","editTodo","text","handleEditChange","e","target","value","handleEditSubmit","deleteTodo","filter","handleChange","handleSubmit","preventDefault","trim","newTodo","length","time","Date","toLocaleString","className","children","onSubmit","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","isEditing","_c","$RefreshReg$"],"sources":["C:/Users/Omkar Patil/Desktop/Internship Task2/todofrontend/src/Components/todolist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TODOITEM from './todoitem';\r\n\r\nfunction TOLIST() {\r\n  const getTodosFromLocalStorage = () => {\r\n    const savedTodos = localStorage.getItem('todos');\r\n    return savedTodos ? JSON.parse(savedTodos) : [];\r\n  };\r\n\r\n  const saveTodosToLocalStorage = (todos) => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  };\r\n\r\n  const [todos, setTodos] = useState(getTodosFromLocalStorage());\r\n  const [newTodoText, setNewTodoText] = useState('');\r\n  const [editMode, setEditMode] = useState(false); // Track which todo is in edit mode\r\n  const [editText, setEditText] = useState('');   // Store the text being edited\r\n\r\n  useEffect(() => {\r\n    saveTodosToLocalStorage(todos);\r\n  }, [todos]);\r\n\r\n  const toggleComplete = (id) => {\r\n    setTodos(todos.map(todo => todo.id === id ? { ...todo, completed: !todo.completed } : todo));\r\n  };\r\n\r\n  const editTodo = (id, text) => {\r\n    setEditMode(id); // Set the id of the todo being edited\r\n    setEditText(text); // Initialize with the current text of the todo\r\n  };\r\n\r\n  const handleEditChange = (e) => {\r\n    setEditText(e.target.value);\r\n  };\r\n\r\n  const handleEditSubmit = (id) => {\r\n    setTodos(todos.map(todo => \r\n      todo.id === id ? { ...todo, text: editText } : todo\r\n    ));\r\n    setEditMode(null);\r\n    setEditText('');\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    \r\n    setTodos(todos.filter(todo => todo.id !== id));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setNewTodoText(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (newTodoText.trim() === '') return;\r\n\r\n    const newTodo = {\r\n      id: todos.length ? todos[todos.length - 1].id + 1 : 1,\r\n      text: newTodoText,\r\n      time: new Date().toLocaleString(),\r\n      completed: false,\r\n    };\r\n\r\n    setTodos([...todos, newTodo]);\r\n    setNewTodoText('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    \r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={newTodoText}\r\n          onChange={handleChange}\r\n          placeholder=\"Add a new task\"\r\n        />\r\n        <button type=\"submit\">Add Todo</button>\r\n      </form>\r\n      <div className=\"todo-list\">\r\n        {todos.map(todo => (\r\n          <TODOITEM\r\n            key={todo.id}\r\n            todo={todo}\r\n            toggleComplete={toggleComplete}\r\n            editTodo={editTodo} // Pass the function directly\r\n            deleteTodo={deleteTodo}\r\n            isEditing={editMode === todo.id}\r\n            editText={editText}\r\n            handleEditChange={handleEditChange}\r\n            handleEditSubmit={handleEditSubmit}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TOLIST;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}